jobs:
- name: snapjob_s3
  type: snap
  filesystems: {
    {% for fs in zfs_filesystems | union(zvols) | default({}) %}
      {%- if (fs.snapshots is defined and fs.snapshots.snapshot is defined) %}
        {{ '\n    ' }}"{{ fs.name }}": {{ fs.snapshots.snapshot }},
      {%- elif (zfs_snapshot_default_snapshot is defined) %}
        {{ '\n    ' }}"{{ fs.name }}": {{ zfs_snapshot_default_snapshot }},
      {%- endif %}
    {% endfor %}

  }
  snapshotting:
    type: cron
    cron: "0 2 * * *"
    prefix: zrepl_s3_
    timestamp_format: iso-8601
    hooks:
    - type: command
      path: /usr/local/bin/zrepl-notify
      timeout: 30s
  pruning:
    keep:
      - type: grid
        grid: 1x1d(keep=all) | 336x1h | 90x1d | 6x30d
        regex: "^zrepl_s3_.*"
      - type: regex
        regex: ^(?:[^z].*|z[^r].*|zr[^e].*|zre[^p].*|zrep[^l].*|zrepl[^_].*|zrepl_[^s].*|zrepl_s[^3].*|zrepl_s3[^_].*|.{0,8})$
- name: snapjob_local
  type: snap
  filesystems: {
    {% for fs in zfs_filesystems | union(zvols) | default({}) %}
      {%- if (fs.snapshots is defined and fs.snapshots.snapshot is defined) %}
        {{ '\n    ' }}"{{ fs.name }}": {{ fs.snapshots.snapshot }},
      {%- elif (zfs_snapshot_default_snapshot is defined) %}
        {{ '\n    ' }}"{{ fs.name }}": {{ zfs_snapshot_default_snapshot }},
      {%- endif %}
    {% endfor %}

  }
  snapshotting:
    type: periodic
    interval: 10m
    prefix: zrepl_local_
    timestamp_format: iso-8601
  pruning:
    keep:
      - type: grid
        grid: 1x1d(keep=all) | 336x1h | 90x1d | 6x30d
        regex: "^zrepl_local_.*"
      - type: regex
        regex: ^(?:[^z].*|z[^r].*|zr[^e].*|zre[^p].*|zrep[^l].*|zrepl[^_].*|zrepl_[^l].*|zrepl_l[^o].*|zrepl_lo[^c].*|zrepl_loc[^a].*|zrepl_loca[^l].*|zrepl_local[^_].*|.{0,11})$
global:
  logging:
    - type: "stdout"
      level:  "warn"
      format: "human"
